{"version":3,"sources":["componentes/DocuPDF.js","componentes/Play.js","componentes/Table.js","componentes/Form.js","componentes/Graph.js","App.js","index.js"],"names":["DocuPDF","img","date","saldo","style","padding","map","e","i","display","justifyContent","src","Play","setInit","useState","playFrame","setPlayFrame","useEffect","timer","setInterval","clearInterval","className","icon","faChevronLeft","faChevronRight","onClick","Table","id","Form","setEdit","setDate","setSaldo","onSubmit","preventDefault","target","value","alert","htmlFor","type","length","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","options","responsive","Graph","labels","data","useMemo","datasets","label","tension","borderColor","pointRadius","pointBackgroundColor","App","init","edit","viewPDF","setViewPDF","setImg","imgGraph","document","getElementById","html2canvas","logging","then","canvas","imgurl","toDataURL","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3646832f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Document, Page, Text, View, Image } from \"@react-pdf/renderer\";\n\nconst DocuPDF = ({ img, date, saldo }) => {\n\n  return (\n    <Document>\n      <Page>\n        <view style={{\n          padding: '50px'\n        }}>\n        {date.map((e,i)=>{\n          return(\n            <Text key={i}>{date[i]}- ${saldo[i]}</Text>\n          )\n        })}\n        </view>\n      </Page>\n      <Page>\n        <View style={{display: 'flex', justifyContent: 'center'}}>\n          <Image src={img}></Image>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default DocuPDF;\n","import React, { useEffect, useState } from 'react'\n//estilos\nimport '../styles/play.scss'\n//iconos\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nexport const Play = ({ setInit }) => {\n\n  const [playFrame, setPlayFrame] = useState(1);\n\n  useEffect(() => {\n    var timer = setInterval(() => {\n        if(playFrame === 3){\n          setPlayFrame(1);\n        } else {\n          setPlayFrame(playFrame + 1);\n        }\n    },5000);\n    return () => clearInterval(timer);\n  });\n\n  return (\n    <div className='play'>\n      <div className={`animation frame${playFrame}`}>\n        <FontAwesomeIcon icon={faChevronLeft} className='i1'/>\n        <span>Dev by Gael García/</span>\n        <p>ibera tus</p>\n        <FontAwesomeIcon icon={faChevronRight} className='i2'/>\n        <p>inanzas</p>\n      </div>\n      <div>\n        <button onClick={() => setInit(true)}>Calcular</button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport '../styles/table.scss'\n\nexport const Table = ({ date, saldo }) => {\n    return (\n        <div className='table' id='table'>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Fecha</th>\n                        <th>Saldo</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {date.map((e,i)=>{\n                        return(\n                            <tr key={i}>\n                                <td>{date[i]}</td>\n                                <td>{saldo[i]}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import React from 'react'\n//estilos\nimport '../styles/form.scss'\n\nexport const Form = ({ \n    setEdit,\n    date,\n    setDate,\n    saldo,\n    setSaldo\n}) => {\n\n    const add = (e) => {\n        e.preventDefault();\n        if(!e.target.date.value | !e.target.saldo.value){\n            alert('Completa todos los campos');\n        } else {\n            setDate([...date, e.target.date.value]);\n            setSaldo([...saldo, e.target.saldo.value]);\n            e.target.date.value = \"\";\n            e.target.saldo.value = \"\";\n        }\n    }\n\n    return (\n        <form className='form' onSubmit={add}>\n            <label htmlFor='date'>Fecha:</label>\n            <input type='date' id='date'></input>\n            <label htmlFor='saldo'>Saldo:</label>\n            <input type='number' id='saldo'></input>\n            <button type='submit'>Agregar</button>\n            <button onClick={()=>{\n                if(date.length < 2){\n                    alert('Se necesitan por lo menos 2 valores para generar la grafica');\n                } else {\n                    setEdit(false);\n                }\n            }}>Gráfica</button>\n        </form>\n    )\n}\n","import React, { useMemo } from 'react'\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst options = {\n  responsive: true\n};\n\nexport const Graph = ({ date, saldo }) => {\n\n  const labels = date;\n  \n  const data = useMemo(function () {\n    return {\n      datasets: [\n        {\n          label: \"Saldo\",\n          data: saldo,\n          tension: 0.3,\n          borderColor: \"#066\",\n          pointRadius: 5,\n          pointBackgroundColor: \"#066\",\n        }\n      ],\n      labels\n    };\n  }, []);\n\n  return (\n    <Line data={data} options={options}/>\n  )\n}","import React, { useState } from \"react\";\n//estilos \nimport './styles/mixin.scss'\n//componentes\nimport DocuPDF from \"./componentes/DocuPDF\";\nimport { Play } from \"./componentes/Play\";\nimport { Table } from \"./componentes/Table\";\nimport { Form } from \"./componentes/Form\";\nimport { Graph } from \"./componentes/Graph\"; \n//crear pdf\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport html2canvas from \"html2canvas\";\n\nfunction App() {\n\n  const [date, setDate] = useState([]);\n  const [saldo, setSaldo] = useState([]);\n\n  const [init, setInit] = useState(false);\n  const [edit, setEdit] = useState(true);\n  const [viewPDF, setViewPDF] = useState(false);\n\n  const [img, setImg] = useState();\n  const imgGraph = document.getElementById('main')\n\n  const pdfCreate = () => {\n    html2canvas(imgGraph,{logging:false}).then((canvas)=>{\n      const imgurl = canvas.toDataURL();\n      setImg(imgurl);\n    });\n    setViewPDF(true);\n  }\n\n  return (\n    <>\n      {viewPDF ? \n        <div className=\"pdf-cont\">\n          <PDFViewer className=\"pdf\">\n            <DocuPDF \n              img={img}\n              date={date}\n              saldo={saldo}\n            />\n          </PDFViewer>\n        </div>:\n        <main className={init ? 'counting':'play'} id='main'>\n          {!init &&\n            <Play setInit={setInit}/>\n          }\n          {init & edit ?\n            <>\n              <Table\n                date={date}\n                saldo={saldo}\n              />\n              <Form \n                setEdit={setEdit}\n                date={date}\n                setDate={setDate}\n                saldo={saldo}\n                setSaldo={setSaldo}\n              />\n            </>:\"\"\n          }\n          {init & !edit ?\n            <Graph\n              date={date}\n              saldo={saldo}\n            />:\"\"\n          }\n        </main>\n      }\n      {init & !edit & !viewPDF ?\n        <button onClick={pdfCreate} className='pdf'>Descargar PDF</button>:''\n      }\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}